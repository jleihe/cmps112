head	1.2;
access;
symbols;
locks;
comment	@# @;


1.2
date	2009.12.15.04.28.29;	author -;	state -;
branches;
next	1.1;

1.1
date	2009.12.15.04.23.44;	author -;	state -;
branches;
next	;


desc
@@


1.2
log
@-
@
text
@#!/usr/bin/perl
# $Id: touchsym,v 1.1 2009-12-14 20:23:44-08 - - $
#
# NAME
#    touchsym - touch a file or symbolic link
#
# SYNOPSIS
#    touchsym file...
#
# DESCRIPTION
#    Touches each file in @@ARGV.  Uses utime(2) if it is a real 
#    file or directory.  If it is a symlink, deletes and recreates
#    the symlink.
#

use strict;
use warnings;
$0 =~ s|/+$||;
$0 =~ s|^.*/||;
my $status = 0;
END {exit $status}
$SIG{__WARN__} = sub {print STDERR "$0: @@_"; $status = 1};
$SIG{__DIE__} = sub {warn @@_; exit};
sub syswarn {warn "@@_: $!\n"}

for my $file (@@ARGV) {
   if (-l $file) {
      my $link = readlink $file or do {syswarn "readlink $file"; next};
      unlink $file or do {warn "unlink $link"; next};
      symlink $link, $file or do {warn "symlink $link, $file"; next};
   }else {
      utime $^T, $^T, $file or do {warn "utime $file"; next};
   }
}
system "ls -goad @@ARGV";

@


1.1
log
@-
@
text
@d2 1
a2 1
# $Id: touchsymlink,v 1.1 2008-10-01 14:50:48-07 - - $
d28 3
a30 3
      my $link = readlink $file or do {syswarn "readlink $file"; next}
      unlink $link or do {warn "unlink $link"; next}
      symlink $link, $file or do {warn "symlink $link, $file"; next}
d32 1
a32 1
      utime $^T, $^T, $file or do {warn "utime $file"; next}
d35 1
a35 1
system "ls -goa @@ARGV";
@
