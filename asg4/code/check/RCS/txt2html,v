head	1.18;
access;
symbols;
locks;
comment	@# @;


1.18
date	2014.11.20.20.52.30;	author -;	state -;
branches;
next	1.17;

1.17
date	2014.05.30.00.53.00;	author -;	state -;
branches;
next	1.16;

1.16
date	2014.05.30.00.52.09;	author -;	state -;
branches;
next	1.15;

1.15
date	2013.03.28.03.07.05;	author -;	state -;
branches;
next	1.14;

1.14
date	2013.03.28.02.52.36;	author -;	state -;
branches;
next	1.13;

1.13
date	2013.03.08.01.08.49;	author -;	state -;
branches;
next	1.12;

1.12
date	2013.03.08.01.06.59;	author -;	state -;
branches;
next	1.11;

1.11
date	2013.03.08.01.02.45;	author -;	state -;
branches;
next	1.10;

1.10
date	2012.01.25.00.39.15;	author -;	state -;
branches;
next	1.9;

1.9
date	2012.01.25.00.38.26;	author -;	state -;
branches;
next	1.8;

1.8
date	2011.04.05.22.17.36;	author -;	state -;
branches;
next	1.7;

1.7
date	2009.09.22.22.56.31;	author -;	state -;
branches;
next	1.6;

1.6
date	2009.01.03.04.43.41;	author -;	state -;
branches;
next	1.5;

1.5
date	2009.01.03.04.32.29;	author -;	state -;
branches;
next	1.4;

1.4
date	2009.01.03.04.27.45;	author -;	state -;
branches;
next	1.3;

1.3
date	2009.01.03.04.07.28;	author -;	state -;
branches;
next	1.2;

1.2
date	2009.01.03.02.13.48;	author -;	state -;
branches;
next	1.1;

1.1
date	2009.01.03.01.53.29;	author -;	state -;
branches;
next	;


desc
@@


1.18
log
@-
@
text
@#!/usr/bin/perl
# $Id: txt2html,v 1.17 2014-05-29 17:53:00-07 - - $
#
# NAME
#    txt2html - convert text file to html, editing http: strings
#
# SYNOPSIS
#    txt2html textfile
#
# DESCRIPTION
#    Reads textfile to replace strings of the form http:\S+*
#    with the directory name that it matches, if the directory
#    exists.  Creates an html file from the textfile by editing
#    all http: strings into an html link.  The file is created
#    with the suffix .txt or .text replaced by .html
#    It also converts the text file into Postscript and PDF.
#

use strict;
use warnings;

$0 =~ s|^(.*/)?([^/]+)/*$|$2|;
my $exit_status = 0;
END {exit $exit_status}
sub note(@@) { print STDERR "$0: @@_"; };
$SIG{'__WARN__'} = sub { note @@_; $exit_status = 1; };
$SIG{'__DIE__'} = sub { warn @@_; exit; };

if (@@ARGV != 1) {
   print STDERR "Usage: $0 textfile\n";
   $exit_status = 1;
   exit
}

my $textname = shift;
open TEXTIN, "<$textname" or die "$textname: $!\n";
print STDERR "open <$textname: OK\n";
my @@text = <TEXTIN>;
close TEXTIN;

for my $line (@@text) {
   next unless $line =~ m/((^|\b)https?:)(\S+)\*/;
   my ($prefix, $dirpat) = ($1, $3);
   my $dir = glob "$dirpat*";
   next unless defined $dir and -d $dir;
   $line =~ s|$prefix$dirpat\*|$prefix$dir/|;
}

system "cid + $textname";
open TEXTOUT, ">$textname" or die "$textname: $!\n";
print TEXTOUT @@text;
close TEXTOUT;

my %htchars = qw (& &amp; < &lt; > &gt;);
for my $line (@@text) {
   $line =~ s|[&<>]|$htchars{$&}|g;
   $line =~ s{(^|\b)https?:\S+}{<A HREF=$&>$&</A>}g;
}

my $titlename = $textname;
$titlename =~ s/\.(txt|text|cat)$//;
my $htmlname = "$titlename.html";

my $pwd = `pwd`;
chomp $pwd;
$pwd =~ s|/afs/cats.ucsc.edu/courses/||;
my @@headtext = <<__END_HEADTEXT__;
   <HEAD>
   <TITLE>~$pwd/$titlename</TITLE>
   <STYLE> 
   body {
      color: #2FFF2F !important;
      background-color: #2F2F2F !important;
   }
   table { 
      border: 2px solid;
      border-spacing: 0px;
   }
   td {
      border: 2px solid;
      padding: 3px;
      width: 14%;
      vertical-align: top;
   }
   A:link {color: #2FFFFF}
   A:visited {color: #FFFF2F}
   A:hover {color: #FF2F2F}
   </STYLE>
   </HEAD> 
   <BODY>
__END_HEADTEXT__
map {s/^   //} @@headtext;

open HTMLOUT, ">$htmlname" or die "$htmlname: $!\n";
print STDERR "open >$htmlname: OK\n";
print HTMLOUT @@headtext;
print HTMLOUT "<PRE>\n";
print HTMLOUT @@text;
print HTMLOUT "</PRE>\n</BODY>\n";
close HTMLOUT;

system "ls -laofg $textname $htmlname";

@


1.17
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.16 2014-05-29 17:52:09-07 - - $
d61 1
a61 1
my $titlename =~ s/\.(txt|text|cat)$//;
d67 1
a67 1
@@headtext = __END_HEADTEXT__
d96 1
a96 1
print HTMLOUT @@headtext
@


1.16
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.15 2013-03-27 20:07:05-07 - - $
d61 2
a62 2
$titlename =~ s/\.(txt|text|cat)$//;
$htmlname = "$titlename.html";
d64 1
a64 1
$pwd = `pwd`;
@


1.15
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.14 2013-03-27 19:52:36-07 - - $
d60 33
a92 3
my $htmlname = $textname;
$htmlname =~ s/\.(txt|text|cat)$//;
$htmlname .= ".html";
d96 1
d99 1
@


1.14
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.13 2013/03/08 01:08:49 - - $
a39 1
system "cid + $textname";
d49 1
@


1.13
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.12 2013-03-07 17:06:59-08 - - $
d40 1
d50 4
@


1.12
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.11 2013-03-07 17:02:45-08 - - $
a48 2
system "cid + $textname";

@


1.11
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.10 2012-01-24 16:39:15-08 - - $
a37 2
system "cid + $textname";
system "ident $textname";
a39 1
system "cid + $textname";
@


1.10
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.9 2012-01-24 16:38:26-08 - - $
d11 5
a15 5
#    Edits textfile in place to replace strings of the form
#    http:\S+* with the directory name that it matches, if the
#    directory exists.  Creates an html file from the textfile
#    by editing all http: strings into an html link.  The file
#    created has the suffix .txt or .text replaced by .html
a43 1
my $wantrewrite = 0;
a49 8
   $wantrewrite = 1;
}

if ($wantrewrite) {
   open TEXTOUT, ">$textname" or die "$textname: $!\n";
   print TEXTOUT @@text;
   close TEXTOUT;
   system "cid + $textname";
@


1.9
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.8 2011-04-05 15:17:36-07 - - $
d39 1
@


1.8
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.7 2009-09-22 15:56:31-07 - - $
d37 2
d73 1
d78 2
@


1.7
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.6 2009-01-02 20:43:41-08 - - $
d67 1
a67 1
$htmlname =~ s/\.(txt|text)$//;
@


1.6
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.5 2009-01-02 20:32:29-08 - - $
d29 5
a33 2
do {print STDERR "Usage: $0 textfile\n"; $exit_status = 1; exit}
unless @@ARGV == 1;
a38 1

d41 1
d48 1
d51 6
a56 3
open TEXTOUT, ">$textname" or die "$textname: $!\n";
print TEXTOUT @@text;
close TEXTOUT;
d61 4
a64 4
map {
   s|[&<>]|$htchars{$&}|g;
   s{(^|\b)https?:\S+}{<A HREF=$&>$&</A>}g;
} @@text;
@


1.5
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.4 2009-01-02 20:27:45-08 - - $
d64 1
@


1.4
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.3 2009-01-02 20:07:28-08 - - $
a49 1
print "$0: updated $textname: OK\n";
a64 1
print "$0: created $textname: OK\n";
@


1.3
log
@-
@
text
@d2 1
a2 1
# $Id: txthtpspdf,v 1.1 2009-01-02 18:14:31-08 - - $
a52 1
system "ident $textname";
@


1.2
log
@-
@
text
@d2 1
a2 1
# $Id: txthtmlps,v 1.1 2009-01-02 18:11:59-08 - - $
d16 1
a69 4
my $psname = $htmlname;
$psname =~ s/\.html$/.ps/;
system "mkpspdf $psname $textname";

@


1.1
log
@-
@
text
@d2 1
a2 1
# $Id$
d25 1
a25 1
$SIG{'__WARN__'} = sub { note @@_; $EXITCODE = 1; };
d28 1
a28 1
do {print STDERR "Usage: $0 textfile"; $exit_status = 1; exit}
d39 5
a43 2
   next unless $line =~ m/((^|\b)https?:)(\S+\*)/;
   next unless my $dir = glob $3 and -d $dir;
d45 28
@
